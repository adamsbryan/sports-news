[{"/Users/bryanadams/Desktop/Side Projects/sportech/src/index.js":"1","/Users/bryanadams/Desktop/Side Projects/sportech/src/App.js":"2","/Users/bryanadams/Desktop/Side Projects/sportech/src/Components/Date.js":"3","/Users/bryanadams/Desktop/Side Projects/sportech/src/Components/FrontPage.js":"4"},{"size":219,"mtime":1610711259385,"results":"5","hashOfConfig":"6"},{"size":687,"mtime":1610771614157,"results":"7","hashOfConfig":"6"},{"size":680,"mtime":1610725686172,"results":"8","hashOfConfig":"6"},{"size":802,"mtime":1610773205021,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"w18jk",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/bryanadams/Desktop/Side Projects/sportech/src/index.js",[],["19","20"],"/Users/bryanadams/Desktop/Side Projects/sportech/src/App.js",[],"/Users/bryanadams/Desktop/Side Projects/sportech/src/Components/Date.js",[],"/Users/bryanadams/Desktop/Side Projects/sportech/src/Components/FrontPage.js",["21","22"],{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","severity":1,"message":"28","line":6,"column":9,"nodeType":"29","messageId":"30","endLine":6,"endColumn":16},{"ruleId":"31","severity":1,"message":"32","line":19,"column":8,"nodeType":"33","endLine":19,"endColumn":10,"suggestions":"34"},"no-native-reassign",["35"],"no-negated-in-lhs",["36"],"no-unused-vars","'history' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'newDate' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["37"],"no-global-assign","no-unsafe-negation",{"desc":"38","fix":"39"},"Update the dependencies array to be: [newDate, props]",{"range":"40","text":"41"},[651,653],"[newDate, props]"]